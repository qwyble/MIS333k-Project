@model IEnumerable<Longhorn_Music_Team_17.Models.Song>
@using Longhorn_Music_Team_17.Controllers;
@{
    ViewBag.Title = "Songs";
}

<h2>Songs</h2>

@using (Html.BeginForm("SearchResults", "Search", FormMethod.Post))
{
    <p class="form-group">

        <ng-form class="form-inline">
            <input type="submit" name="btn1" value="Artists" class="btn btn-default" />
            <input type="submit" name="btn1" value="Albums" class="btn btn-default" />
        </ng-form><br /><br /> <!--submit buttons for different search types-->


        <ng-form class="form-inline">
            @Html.TextBox("SearchSong", null, new { @class = "form-control", Placeholder = "Song Title" })
            @Html.TextBox("SearchArtist", null, new { @class = "form-control", Placeholder = "Artist Name" })
            @Html.TextBox("SearchAlbum", null, new { @class = "form-control", Placeholder = "Album Title" })
            <button name="btn1" value="Songs" type="submit" , class="btn btn-primary">Search</button>

        </ng-form>             <!--textboxes for search parameters-->
        <br />

        <div class="form-group">
            @foreach (var item in ViewBag.GenreList)
                {
                <div class="checkbox">
                    <label>
                        <input type="checkbox" name="SelectedGenres" value="@item" /> @item
                    </label>
                </div>
            }
        </div>                      <!--dynamically generate genre list (checkboxes)-->


        <div class="form-check">
            <div class="in-line">
                <label class="form-check-label">
                    @Html.DropDownList("SelectedOrderType", EnumHelper.GetSelectList(typeof(OrderType)), "-order by-", new { @class = "form-control", @style = "width:130px;" })
                </label>
                <label class="form-check-label">
                    @Html.DropDownList("SelectedSortOrder", EnumHelper.GetSelectList(typeof(SortOrder)), new { @class = "form-control", @style = "width:130px;" })
                </label>
            </div>
        </div>                      <!--order by parameters (dropdown)-->

        <br />
        Average Rating:
        <div class="form-check">
            <ng-form class="in-line">
                <label class="form-check-label">
                    @Html.RadioButton("SelectedRating", "0", new { @class = "form-check-input" }) <br /> 0
                </label>
                <label class="form-check-label">
                    @Html.RadioButton("SelectedRating", "1", new { @class = "form-check-input" }) <br /> 1
                </label>
                <label class="form-check-label">
                    @Html.RadioButton("SelectedRating", "2", new { @class = "form-check-input" }) <br /> 2
                </label>
                <label class="form-check-label">
                    @Html.RadioButton("SelectedRating", "3", new { @class = "form-check-input" }) <br /> 3
                </label>
                <label class="form-check-label">
                    @Html.RadioButton("SelectedRating", "4", new { @class = "form-check-input" }) <br /> 4
                </label>
                <label class="form-check-label">
                    @Html.RadioButton("SelectedRating", "5", new { @class = "form-check-input" }) <br /> 5
                </label>
                <label class="form-check-label">
                    @Html.DropDownList("RatingSort", new SelectList(Enum.GetValues(typeof(ABRating))), new { @class = "form-control" })

                </label>
            </ng-form>
        </div>                      <!--Rating parameters-->

        <br />
        <button name="btn1" value="Songs" type="submit" , class="btn btn-primary">Search</button>
    </p>
    <br />
}
@ViewBag.numResults results

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.SongTitle)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Artists)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SongPrice)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Ratings)
        </th>

        <th></th>
    </tr>

    @foreach (var item in Model)
            {
        <tr>
            <td>
                @Html.ActionLink(item.SongTitle ?? "-untitled", "Details", "Details", new { it = item.SongID })
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Artists.FirstOrDefault().ArtistName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SongPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Ratings.FirstOrDefault().RatingScore)
            </td>
        </tr>
    }

</table>                        <!--table to display results-->
